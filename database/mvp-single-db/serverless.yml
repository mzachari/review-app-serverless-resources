service: review-app-mvp-ext-database

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Set the table name here so we can use it while testing locally
  singleTable: ${self:custom.stage}-product-review
  backupEnabled:
    dev: false
    stage: false
    prod: true


provider:
  name: aws
  stage: dev
  region: ${opt:region,'ap-south-1'}
  profile: ${opt:profile, 'staginghta'}

resources:
  Resources:
    #Single Table Config
    SingleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        # Generate a name based on the stage
        TableName: ${self:custom.singleTable}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: ${self:custom.backupEnabled.${opt:stage, self:provider.stage}}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S  
          - AttributeName: LSI-1-SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE  
        LocalSecondaryIndexes:
          - IndexName: "LSI-1"
            KeySchema:
              - AttributeName: PK
                KeyType: HASH
              - AttributeName: LSI-1-SK
                KeyType: RANGE  
            Projection:
              ProjectionType: ALL 
        # Set the capacity to auto-scale
        BillingMode: PAY_PER_REQUEST


  Outputs:
    SingleTableArn:
      Value:
         Fn::GetAtt:
          - SingleTable
          - Arn
      Export:
        Name: ${self:custom.stage}-SingleTableArn